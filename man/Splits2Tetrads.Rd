\name{Splits2Tetrads}
\alias{Splits2Tetrads}

\title{Splits to tetrads}
\description{Convert bipartition splits to tetrad statements.}
\usage{
Splits2Tetrads(splits)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{splits}{a tree of bipartition splits generated by, for example, 
                \code{lapply(trees, \link{Tree2Splits})}}
}
\details{
  Converts a list of bipartitions (splits) into a series of 'tetrad statements'.
  For each tetrad statement in turn (in the order generated by \code{\link{Choices}}), determines
  which of the three possible relationships are consistent with the provided bipartitions.
  Returns the sister taxon to the first listed taxon.
  So for the tips \code{c(1, 2, 3, 4)}, if taxon 3 is more closely related to taxon 1 than 2 or 4,
  will return \code{3}; for the tips \code{c(3, 5, 7, 9)}, if 9 is most closely related to taxon
  3, will return \code{4}. 
  If the relationships of the four taxa are unresolved due to a polytomy, returns \code{0}.
}
\value{
  Returns a list, each element of which corresponds to the tetrad states in the respective input tree.
  Each element of the list is an array of integers of length \code{\link{choose}(n_tips, 4)}.
}
\references{
  Smith, M. R. Forthcoming.
}
\author{
Martin R. Smith
}

\seealso{
  \code{\link{TetradMatch}}, efficiently compares lists of tetrads.
}

\examples{
  n_tip <- 6
  library(ape)
  trees <- list(rtree(n_tip, tip.label=seq_len(n_tip), br=NULL),
                rtree(n_tip, tip.label=seq_len(n_tip), br=NULL))
  splits <- lapply(trees, Tree2Splits)
  tetrads <- Splits2Tetrads(splits)
  compare_result <- CompareTetrads(tetrads[[1]], tetrads[[2]])
  dissimilar_tetrads <- choose(n_tip, 4) - sum(compare_result)  
  result <- c(compare_result, dissimilar_tetrads)
  names(result) <- c('Shared', 'Unresolved', 'Dissimilar')
  result
}
